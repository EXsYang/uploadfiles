Thread线程

创建线程的方式：
1.extends Thread
2.implements Runnable
3.MyCallable implements Callable
重写call()	
FutureTask futuretask = new FutureTask(MyCallable);
	Thread(futuretask).start();
4.线程池：
ExecutorService service = Executors.newFixedThreadPool(nThreads);
ThreadPoolExecutor service1 = (ThreadPoolExecutor) service;
service1.setCorePoolSize(24);
service.execute(new NumberThread());
service.submit(Callable callable);
service.shutdown();

start()
run()
currentThread()
getName()
setName()
yield()
join()
stop()
sleep(long millitime)
isAlive()

Priority线程的优先级：
MIN_PRIORITY = 1
NORM_PRIORITY = 5
MAX_PRIORITY = 10
getPriority()	setPriority(int newPriority)
/praɪˈɒrəti/ 

线程的通信：此三个方法定义在Object类中的。只可以被同步监视器调用
wait()	只能在同步代码块或同步方法中使用
notify()
notifyAll()

守护线程，在start()前调用thread.setDaemon(true)

线程的生命周期：新建、就绪、运行、阻塞、死亡

线程的同步：synchronized(对象){}
Lock(锁)jdk5.0新增：ReentrantLock 只有代码块锁
调用锁定方法：lock.lock();	调用解锁方法：lock.unlock();










